{"version":3,"sources":["panels/Home.js","panels/Persik.js","img/persik.png","App.js","index.js"],"names":["Home","id","go","fetchedUser","Panel","PanelHeader","Group","header","Header","mode","Cell","before","photo_200","Avatar","src","description","city","title","first_name","last_name","Div","Button","stretched","size","onClick","data-to","Persik","props","App","useState","activePanel","setActivePanel","setUser","ScreenSpinner","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","View","ReactDOM","render","getElementById"],"mappings":"ulBAgDeA,EApCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,kBAACC,EAAA,EAAD,CAAOH,GAAIA,GACV,kBAACI,EAAA,EAAD,kFACCF,GACD,kBAACG,EAAA,EAAD,CAAOC,OAAQ,kBAACC,EAAA,EAAD,CAAQC,KAAK,aAAb,8NACd,kBAACC,EAAA,EAAD,CACCC,OAAQR,EAAYS,UAAY,kBAACC,EAAA,EAAD,CAAQC,IAAKX,EAAYS,YAAe,KACxEG,YAAaZ,EAAYa,MAAQb,EAAYa,KAAKC,MAAQd,EAAYa,KAAKC,MAAQ,IAFpF,UAIKd,EAAYe,WAJjB,YAI+Bf,EAAYgB,aAI5C,kBAACb,EAAA,EAAD,CAAOC,OAAQ,kBAACC,EAAA,EAAD,CAAQC,KAAK,aAAb,gIACd,kBAACW,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAQC,WAAS,EAACC,KAAK,IAAId,KAAK,YAAYe,QAAStB,EAAIuB,UAAQ,QAAjE,gHCKWC,GChCA,I,ODgBA,SAAAC,GAAK,OAElB,kBAACvB,EAAA,EAAD,CAAOH,GAAG,QACT,kBAACI,EAAA,EAAD,kBEiCYuB,EAzCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEV1B,EAFU,KAEG6B,EAFH,OAGWH,mBAAS,kBAACI,EAAA,EAAD,CAAeV,KAAK,WAHxC,mBAGVW,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECR,EAAQQ,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAMnD,EAAK,SAAAoD,GACVvB,EAAeuB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAACC,EAAA,EAAD,CAAM5B,YAAaA,EAAaI,OAAQA,GACvC,kBAAC,EAAD,CAAMjC,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,OAAOC,GAAIA,MC9BzBoC,IAAOC,KAAK,gBAEZoB,IAASC,OAAO,kBAAC,EAAD,MAASd,SAASe,eAAe,W","file":"static/js/main.59c1d081.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Каталог Бесед</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">Это блять инфа о тебе обмудок ты конченный</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Кнопка епта тыкай нахуй</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"list\">\n\t\t\t\t\tПерсика сука покажи\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport List from \"@vkontakte/vkui/dist/components/List/List\";\nimport Cell from \"@vkontakte/vkui/dist/components/Cell/Cell\";\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\nimport Footer from \"@vkontakte/vkui/dist/components/Footer/Footer\";\n\nlet fetchedUser;\nconst Persik = props => (\n\n\t\t<Panel id=\"list\">\n\t\t\t<PanelHeader>\n\t\t\t\tFooter\n\t\t\t</PanelHeader>\n\n\t\t</Panel>\n\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\n\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='small' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='list' go={go} />\n\t\t</View>\n\t);\n}\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyCaRzxR1S--m4m5rQmJJx-M69M3kHpotLE\",\n\tauthDomain: \"chat-catalog.firebaseapp.com\",\n\tprojectId: \"chat-catalog\",\n\tstorageBucket: \"chat-catalog.appspot.com\",\n\tmessagingSenderId: \"1031396487748\",\n\tappId: \"1:1031396487748:web:99631bbcbcfe1c0130c211\",\n\tmeasurementId: \"G-FPXE0DJF9X\"\n};\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}